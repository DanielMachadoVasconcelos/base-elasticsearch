application:
  version: "1.0.0.0"
  name: "person-search"

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, ping, metrics

spring:
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}
    consumer:
      auto-offset-reset: earliest
      group-id: person-group-id
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: true
      client-id: person-client-id
      properties:
        - json.trusted.packages=*
    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      poll-timeout: 1800000
      concurrency: 1

  data:
    elasticsearch:
      client:
        reactive:
          connection-timeout: 30s

resilience4j.circuitbreaker:
  instances:
    person-service-save-circuit-breaker:
      registerHealthIndicator: true
      slidingWindowSize: 50
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50

resilience4j.retry:
  instances:
    person-service-save-retry:
      maxAttempts: 3
      waitDuration: 5s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2